function g; git; end;

function ga; git add; end;
function gaa; git add --all; end;
function gapa; git add --patch; end;

function gb; git branch; end;
function gba; git branch -a; end;
function gbda; git branch --merged | command grep -vE "^(\*|\s*master\s*\$)" | command xargs -n 1 git branch -d; end;
function gbl; git blame -b -w; end;
function gbnm; git branch --no-merged; end;
function gbr; git branch --remote; end;
function gbs; git bisect; end;
function gbsb; git bisect bad; end;
function gbsg; git bisect good; end;
function gbsr; git bisect reset; end;
function gbss; git bisect start; end;

function gc; git commit -v; end;
function gc; git commit -v --amend; end;
function gca; git commit -v -a; end;
function gca!; git commit -v -a --amend; end;
function gcan!; git commit -v -a -s --no-edit --amend; end;
function gcb; git checkout -b; end;
function gcf; git config --list; end;
function gcl; git clone --recursive; end;
function gclean; git reset --hard ;and git clean -dfx; end;
function gcm; git checkout master; end;
function gcmsg; git commit -m; end;
function gco; git checkout; end;
function gcount; git shortlog -sn; end;
function gcp; git cherry-pick; end;
function gcs; git commit -S; end;

function gd; git diff; end;
function gdca; git diff --cached; end;
function gdt; git diff-tree --no-commit-id --name-only -r; end;

function gf; git fetch; end;
function gfa; git fetch --all --prune; end;
function gfo; git fetch origin; end;

function gg; git gui citool; end;
function gga; git gui citool --amend; end;

function gignore; git update-index --assume-unchanged; end;
function gignored; git ls-files -v | grep "^[[:lower:]]"; end;

function gl; git pull; end;
function glg; git log --stat --color; end;
function glgp; git log --stat --color -p; end;
function glgg; git log --graph --color; end;
function glgga; git log --graph --decorate --all; end;
function glgm; git log --graph --max-count=10; end;
function glo; git log --oneline --decorate --color; end;
function glol; git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit; end;
function glola; git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all; end;
function glog; git log --oneline --decorate --color --graph; end;

function gmom; git merge origin/master; end;
function gmt; git mergetool --no-prompt; end;
function gmtvim; git mergetool --no-prompt --tool=vimdiff; end;
function gmum; git merge upstream/master; end;

function gp; git push; end;
function gpd; git push --dry-run; end;
function gpoat; git push origin --all ;and git push origin --tags; end;
function gpu; git push upstream; end;
function gpv; git push -v; end;

function gr; git remote; end;
function gra; git remote add; end;
function grb; git rebase; end;
function grba; git rebase --abort; end;
function grbc; git rebase --continue; end;
function grbi; git rebase -i; end;
function grbm; git rebase master; end;
function grbs; git rebase --skip; end;
function grh; git reset HEAD; end;
function grhh; git reset HEAD --hard; end;
function grmv; git remote rename; end;
function grrm; git remote remove; end;
function grset; git remote set-url; end;
function grt; cd (git rev-parse --show-toplevel ;or echo "."); end;
function gru; git reset --; end;
function grup; git remote update; end;
function grv; git remote -v; end;

function gsb; git status -sb; end;
function gsd; git svn dcommit; end;
function gsi; git submodule init; end;
function gsps; git show --pretty=short --show-signature; end;
function gsr; git svn rebase; end;
function gss; git status -s; end;
function gst; git status; end;
function gsta; git stash; end;
function gstaa; git stash apply; end;
function gstd; git stash drop; end;
function gstl; git stash list; end;
function gstp; git stash pop; end;
function gsts; git stash show --text; end;
function gsu; git submodule update; end;

function gts; git tag -s; end;

function gunignore; git update-index --no-assume-unchanged; end;
function gunwip; git log -n 1 | grep -q -c "\-\-wip\-\-" ;and git reset HEAD~1; end;
function gup; git pull --rebase; end;
function gupv; git pull --rebase -v; end;

function gvt; git verify-tag; end;
